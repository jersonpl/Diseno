{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jerso\\\\Google Drive\\\\Uninorte\\\\9. Noveno\\\\Dise\\xF1o Electr\\xF3nico\\\\Proyecto 2\\\\webreact\\\\src\\\\index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n/*\nimport dbConnections from './db.Connections';\nconst express = require('express');\nconst app = express();\n\napp.get('/posts', (req,res) =>{\n    var con = dbConnections();\n    con.query('SELECT * FROM syrus order by ID desc limit 1', function (err, results) {\n        if (err){\n            return res.send(err)\n        }else{\n            return res.send({\n                data: results\n            })\n        }\n    });\n});\n\napp.listen(3000, () =>{\n    console.log('On port  3000');\n});\n*/\n\nReactDOM.render(React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 29\n  },\n  __self: this\n}), document.getElementById('root'));\nserviceWorker.unregister();","map":{"version":3,"sources":["C:\\Users\\jerso\\Google Drive\\Uninorte\\9. Noveno\\Diseño Electrónico\\Proyecto 2\\webreact\\src\\index.js"],"names":["React","ReactDOM","App","serviceWorker","render","document","getElementById","unregister"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAO,KAAKC,aAAZ,MAA+B,iBAA/B;AAEA;;;;;;;;;;;;;;;;;;;;;;;AAsBAF,QAAQ,CAACG,MAAT,CAAgB,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAhB,EAAyBC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAAzB;AACAH,aAAa,CAACI,UAAd","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n/*\nimport dbConnections from './db.Connections';\nconst express = require('express');\nconst app = express();\n\napp.get('/posts', (req,res) =>{\n    var con = dbConnections();\n    con.query('SELECT * FROM syrus order by ID desc limit 1', function (err, results) {\n        if (err){\n            return res.send(err)\n        }else{\n            return res.send({\n                data: results\n            })\n        }\n    });\n});\n\napp.listen(3000, () =>{\n    console.log('On port  3000');\n});\n*/\nReactDOM.render(<App />, document.getElementById('root'));\nserviceWorker.unregister();"]},"metadata":{},"sourceType":"module"}